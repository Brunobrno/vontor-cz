name: GitHub Actions - Docker Compose
run-name: ${{ github.actor }} testing docker compose config
on:
  push:
    branches:
      - main

jobs:
  docker-compose-test:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose
      
      # Create .env file from GitHub Secrets
      - name: Create .env file
        run: |
          echo "DATABASE_HOST=${{ secrets.DATABASE_HOST }}" >> .env
          echo "DATABASE_PORT=${{ secrets.DATABASE_PORT }}" >> .env
          echo "DATABASE_ENGINE=${{ secrets.DATABASE_ENGINE }}" >> .env
          echo "DATABASE_NAME=${{ secrets.DATABASE_NAME }}" >> .env
          echo "DATABASE_USER=${{ secrets.DATABASE_USER }}" >> .env
          echo "DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}" >> .env
          echo "TAILSCALE_API_KEY=${{ secrets.TAILSCALE_API_KEY }}" >> .env
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> .env
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> .env
          echo "AWS_STORAGE_BUCKET_NAME=${{ secrets.AWS_STORAGE_BUCKET_NAME }}" >> .env
          echo "AWS_S3_REGION_NAME=${{ secrets.AWS_S3_REGION_NAME }}" >> .env

      # Verify .env file creation (Optional: For debugging)
      - name: List files to verify .env exists
        run: ls -al

      # Start Docker Compose
      - name: Start Docker Compose
        run: docker-compose up --build
