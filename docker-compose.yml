services:
  tailscale:
    image: tailscale/tailscale:stable
    container_name: tailscale-bridge
    hostname: vontor-cz-docker-digital-ocean
    env_file:
      - .env  # Load environment variables from the .env file
    environment:
      - TS_AUTHKEY=${TAILSCALE_API_KEY}
      - TS_STATE_DIR=/var/lib/tailscale
      - TS_USERSPACE=false
    volumes:
      - ${PWD}/ts-authkey-test/state:/var/lib/tailscale
      - /dev/net/tun:/dev/net/tun
    cap_add:
      - net_admin
      - sys_module
    restart: unless-stopped

    network_mode: host

  web:
    depends_on:
      - tailscale
    env_file:
      - .env
    #loading enviroment variables from DigitalOcean
    environment:
      - DATABASE_HOST=${DATABASE_HOST}
      - DATABASE_PORT=${DATABASE_PORT}
      - DATABASE_ENGINE=${DATABASE_ENGINE}
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - TAILSCALE_API_KEY=${TAILSCALE_API_KEY}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_STORAGE_BUCKET_NAME=${AWS_STORAGE_BUCKET_NAME}
      - AWS_S3_REGION_NAME=${AWS_S3_REGION_NAME}
      - DEBUG=${DEBUG}

    build: .
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    command: sh -c "python manage.py collectstatic --noinput && python manage.py makemigrations --noinput && python manage.py migrate --noinput && gunicorn -k uvicorn.workers.UvicornWorker vontor_cz.asgi:application --bind 0.0.0.0:8000"

  
  watchtower: #hlída změny v lokalní složce z repo
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_POLL_INTERVAL=60 # Check every minute
    restart: unless-stopped